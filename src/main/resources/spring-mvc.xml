<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task-3.1.xsd
        ">

	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven之前,否则乱码问题同样无法解决 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean id="fastJsonHttpMessageConverter"
					class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- 开启定时任务 -->
	<task:annotation-driven></task:annotation-driven>
	<mvc:annotation-driven></mvc:annotation-driven>

	<context:component-scan base-package="com.frog.*" />
	<mvc:resources mapping="/manage/js/**" location="/manage/js/" />
	<mvc:resources mapping="/manage/css/**" location="/manage/css/" />
	<mvc:resources mapping="/manage/img/**" location="/manage/img/" />
	<mvc:resources mapping="/manage/assets/**" location="/manage/assets/" />
	<mvc:resources mapping="/manage/assets/fonts/**"
		location="/manage/assets/fonts/" />

	<mvc:resources mapping="/company/js/**" location="/company/js/" />
	<mvc:resources mapping="/company/css/**" location="/company/css/" />
	<mvc:resources mapping="/company/img/**" location="/company/img/" />
	<mvc:resources mapping="/company/assets/**" location="/company/assets/" />
	<mvc:resources mapping="/company/assets/fonts/**"
		location="/company/assets/fonts/" />
	<mvc:resources mapping="/company/data/**" location="/company/data/" />
	<mvc:resources mapping="/company/plugins/**" location="/company/plugins/" />
	<mvc:resources mapping="/company/resources/**" location="/company/resources/" />

	<mvc:resources mapping="/user/js/**" location="/user/js/" />
	<mvc:resources mapping="/user/css/**" location="/user/css/" />
	<mvc:resources mapping="/user/img/**" location="/user/img/" />
	<mvc:resources mapping="/user/fonts/**" location="/user/fonts/" />

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为31M，31*1024*1024 -->
			<value>32505856</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>


	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<!-- 需排除拦截的地址 -->
			<bean class="com.frog.controller.interceptor.ApiInterceptor">
				<property name="commonUnSession">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/getCode</value>
					</list>
				</property>
				<property name="userUnSession">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/codeLogin</value>
						<value>/thirdRegisterLogin</value>
						<value>/getUserInfo</value>
					</list>
				</property>
				<property name="driverUnSession">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/login</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>

		<mvc:interceptor>
			<mvc:mapping path="/manage/**" />
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/manage/img/**" />
			<mvc:exclude-mapping path="/manage/js/**" />
			<mvc:exclude-mapping path="/manage/css/**" />
			<mvc:exclude-mapping path="/manage/assets/**" />
			<bean class="com.frog.controller.interceptor.ManageSessionInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/login</value>
						<value>/toLogin</value>
						<value>/toRegist</value>
						<value>/regist</value>
						<value>/createImg</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/company/**" />
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/company/img/**" />
			<mvc:exclude-mapping path="/company/js/**" />
			<mvc:exclude-mapping path="/company/css/**" />
			<mvc:exclude-mapping path="/company/assets/**" />
			<bean class="com.frog.controller.interceptor.CompanySessionInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/login</value>
						<value>/toLogin</value>
						<value>/validateVCode</value>
						<value>/uploadFile</value>
						<value>/getVCode</value>
						<value>/changepwd</value>
						<value>/registCompany</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/user/**" />
			<!-- 需排除拦截的地址 -->
			<mvc:exclude-mapping path="/user/img/**" />
			<mvc:exclude-mapping path="/user/js/**" />
			<mvc:exclude-mapping path="/user/css/**" />
			<mvc:exclude-mapping path="/user/fonts/**" />
			<!-- <mvc:exclude-mapping path="/user/home/**" /> -->
			<bean class="com.frog.controller.interceptor.UserSessionInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/login</value>
						<value>/validateVCode</value>
						<value>/uploadFile</value>
						<value>/getVCode</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<!-- redis 计数拦截器 -->
		<!-- <mvc:interceptor> -->
		<!-- <mvc:mapping path="/api/common/sys"/> -->
		<!-- <bean class="com.frog.controller.interceptor.SecurityInterceptor"> -->
		<!-- <property name="ipLimitCount" value="10"></property> -->
		<!-- <property name="userLimitCount" value="10"></property> -->
		<!-- <property name="methodSet"> -->
		<!-- <set> -->
		<!-- <value>getCode</value> -->
		<!-- </set> -->
		<!-- </property> -->
		<!-- </bean> -->
		<!-- </mvc:interceptor> -->
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>

</beans>